openapi: 3.0.0
info:
  title: 'Token management and administration'
  version: 1.0.0
paths:
  /api/tokens/enroll:
    post:
      summary: EnrollCard
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: "Card tokenization"
                  type: object
                  example:
                    auth:
                      login: aabbccdd1234567890aabbccdd123456
                      tranKey: ABC123example456trankey+789abc012def3456ABC=
                      nonce: enQ4dXh3YWhkMWM=
                      seed: 2023-06-21T09:56:06-05:00
                    requestId: 8a83df8b-f704-4761-a6a1-14a7fd3635b1
                    siteId: d9efb07c-43ff-45e6-adcc-1b41bf3b9eb5
                    instrument:
                      card:
                        number: '4123700070000045'
                        expiration: "12/23"
                        cvv: '758'
                    payer:
                      name: Bill
                      surname: Evans
                      email: test@visa.com
                  properties:
                    auth:
                      $ref: "#/components/schemas/Authentication"
                    requestId:
                      type: string
                      format: uuid V4
                      example: 8a83df8b-f704-4761-a6a1-14a7fd3635b1
                      description: Request identifier sent by the client for error traceability. See more at **[Use of the request identifier](/en/token-requestor/api/enroll-card#use-of-the-request-identifier-request-id)**
                    siteId:
                      type: string
                      format: uuid V4
                      description: Unique identifier of the site
                      example: 1d6b1456-5fae-4932-92f1-5c46fe6c83e3
                    instrument:
                      type: object
                      description: Structure containing information about the payment method to be used in a transaction; this structure varies according to the request generated; each service requires the use of certain data.
                      properties:
                        card:
                          type: object
                          required:
                            - number
                          x-conditional:
                            - expiration
                          description: Structure containing card information.
                          properties:
                            number:
                              type: string
                              description: 'Card number'
                              maxLength: 20
                            expiration:
                              type: string
                              description: 'Card expiration date (Required for Mastercard)'
                              example: "12/23"
                            cvv:
                              type: string
                              description: 'Security code'
                    payer:
                      type: object
                      description: Structure reflecting the information of a person involved in a transaction.
                      properties:
                        name:
                          type: string
                          example: Jhon
                          minLength: 1
                          description: "Cardholder's first name"
                        surname:
                          type: string
                          description: "Cardholder's last name"
                          example: Doe
                          minLength: 1
                        email:
                          type: string
                          example: jhon@doe.com
                          minLength: 1
                          description: "Cardholder's email address"
                    locale:
                      type: string
                      example: es_WR
                      description: This parameter is composed of the language code according to the [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) standard, followed by an underscore `_` and two letters corresponding to the country according to the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard.
                  required:
                    - auth
                    - requestId
                    - siteId
                    - instrument
                - title: "Token for token"
                  type: object
                  example:
                    auth:
                      login: aabbccdd1234567890aabbccdd123456
                      tranKey: ABC123example456trankey+789abc012def3456ABC=
                      nonce: enQ4dXh3YWhkMWM=
                      seed: 2023-06-21T09:56:06-05:00
                    requestId: 8a83df8b-f704-4761-a6a1-14a7fd3635b1
                    siteId: d9efb07c-43ff-45e6-adcc-1b41bf3b9eb5
                    instrument:
                      brandToken:
                        token: '4123700070000045'
                        expiration: '12/23'
                    payer:
                      name: Bill
                      surname: Evans
                      email: test@visa.com
                  properties:
                    auth:
                      $ref: "#/components/schemas/Authentication"
                    requestId:
                      type: string
                      format: uuid V4
                      example: 8a83df8b-f704-4761-a6a1-14a7fd3635b1
                      description: Request identifier sent by the client for error traceability. See more at **[Use of the request identifier](/en/token-requestor/api/enroll-card#use-of-the-request-identifier-request-id)**
                    siteId:
                      type: string
                      format: uuid V4
                      description: Unique identifier of the site
                      example: 1d6b1456-5fae-4932-92f1-5c46fe6c83e3
                    instrument:
                      type: object
                      description: Structure containing information about the payment method to be used in a transaction; this structure varies according to the request generated; each service requires the use of certain data.
                      properties:
                        brandToken:
                          type: object
                          required:
                            - token
                          x-conditional:
                            - expiration
                          description: Structure containing external information about the token. Only available for VISA-branded tokens.
                          properties:
                            token:
                              type: string
                              description: 'Token provided by the brand'
                              maxLength: 20
                            expiration:
                              type: string
                              description: 'Token expiration date. Optional for VISA'
                              example: "12/23"
                    payer:
                      type: object
                      description: Structure reflecting the information of a person involved in a transaction.
                      properties:
                        name:
                          type: string
                          example: Jhon
                          minLength: 1
                          description: "Cardholder's first name"
                        surname:
                          type: string
                          description: "Cardholder's last name"
                          example: Doe
                          minLength: 1
                        email:
                          type: string
                          example: jhon@doe.com
                          minLength: 1
                          description: "Cardholder's email address"
                    locale:
                      type: string
                      example: es_WR
                      description: This parameter is composed of the language code according to the [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) standard, followed by an underscore `_` and two letters corresponding to the country according to the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard.
                  required:
                    - auth
                    - requestId
                    - siteId
                    - instrument

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    description: Result data
                    properties:
                      requestId:
                        type: string
                        format: uuid V4
                        description: Request identifier sent by the client for error traceability.
                          See more at **[Use of the request identifier](/en/token-requestor/api/enroll-card#use-of-the-request-identifier-request-id)**
                        example: 62a89e6b-6ea9-463a-b720-4d34f76436d9
                      brandToken:
                        type: object
                        description: Structure containing token information associated with the card.
                          For output, all token data is returned upon tokenization.
                        required:
                          - id
                          - token
                          - expiration
                          - additional
                        properties:
                          id:
                            type: string
                            description: Token identifier for TR Placetopay by Evertec, code generated to identify the card in the system
                            maxLength: 36
                            format: uuid V4
                            example: ac660e46-6549-4dfc-b636-586b12a38b40
                          token:
                            type: string
                            description: Token used to process a payment
                            maxLength: 19
                            minLength: 12
                            example: 4761739001010010
                          expiration:
                            type: string
                            description: Token expiration date
                            example: "04/28"
                            format: "mm/YY"
                          additional:
                            type: object
                            description: Additional token information
                            properties:
                              tokenRequestorID:
                                type: string
                                description: TR identifier before the brands
                                maxLength: 11
                                example: '50160269427'
                              artURL:
                                type: string
                                description: URL with card image
                                example: https://token-requestor.placetopay.ws/storage/card-art/mastercard.png
                              issuerName:
                                type: string
                                description: Name of the token's issuing bank
                                example: Issuer Test
                              lastDigits:
                                type: string
                                description: Last 4 digits of the tokenized card
                                example: '1234'
                required:
                  - status
  /api/tokens/cryptogram:
    post:
      summary: Checkout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - siteId
                - instrument
                - isRecurring
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                siteId:
                  type: string
                  format: uuid V4
                  description: Unique identifier of the site
                  example: 1d6b1456-5fae-4932-92f1-5c46fe6c83e3
                instrument:
                  type: object
                  description: Structure containing information about the payment method to be used in a transaction.
                  required:
                    - brandToken
                  properties:
                    brandToken:
                      description: Structure containing token information associated with the card.
                      type: object
                      required:
                        - token
                      properties:
                        token:
                          type: string
                          description: Token provided in the enrollment request
                          minLength: 12
                          maxLength: 19
                          example: 4761739001010010
                isRecurring:
                  type: boolean
                  description: Indicates whether the cryptogram will be used for recurring payments
                  example: false
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    description: Result data
                    properties:
                      cryptogram:
                        type: string
                        description: >
                          Cryptogram used for processing or payment, encoded in Base64.
                        example: "AIiD8382PpTdAAF3OkVCAAADFA=="
                        format: base64
                      eci:
                        type: string
                        description: Code indicating the level of security and authentication.
                        maxLength: 2
                        example: "05"

  /api/tokens/status:
    post:
      summary: GetTokenStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - siteId
                - instrument
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                siteId:
                  type: string
                  format: uuid V4
                  description: Unique identifier of the site
                  example: 1d6b1456-5fae-4932-92f1-5c46fe6c83e3
                instrument:
                  type: object
                  description: Structure containing information about the payment instrument used in a transaction.
                  required:
                    - brandToken
                  properties:
                    brandToken:
                      type: object
                      description: Structure containing token information that associates to the card.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          maxLength: 36
                          description: Token identifier in the application
                          format: uuid V4
                          example: ac660e46-6549-4dfc-b636-586b12a38b40
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        description: Token status
                        enum:
                          - ACTIVE
                          - INACTIVE
                          - EXPIRED
                          - DELETED
                        example: ACTIVE
                      expiration:
                        type: string
                        description: Token expiration date
                        example: "12/29"
                        format: "mm/YY"
                      artURL:
                        type: string
                        description: URL with the card image
                        example: https://token-requestor.placetopay.ws/storage/card-art/mastercard.png
                      onTest:
                        description: Indicates whether the token was created in a test environment or directly with the brand.
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        format: date
                        description: Token creation date
                        example: 2025-01-10
                      updatedAt:
                        type: string
                        format: date
                        description: Token update date
                        example: 2025-01-20
                required:
                  - status
  /api/tokens/delete:
    delete:
      summary: Delete a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                siteId:
                  type: string
                  format: uuid V4
                  description: Unique identifier of the site
                  example: 1d6b1456-5fae-4932-92f1-5c46fe6c83e3
                instrument:
                  type: object
                  description: Structure containing information about the payment instrument used in a transaction.
                  required:
                    - brandToken
                  properties:
                    brandToken:
                      type: object
                      description: Structure containing token information that associates to the card.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          maxLength: 36
                          description: Token identifier in the application
                          format: uuid V4
                          example: ac660e46-6549-4dfc-b636-586b12a38b40
                reason:
                  type: string
                  description: Reason for deleting the token. Valid values.
                  enum:
                    - DELETED
                    - FRAUD
                    - INACTIVITY
                  example: "FRAUD"
                description:
                  type: string
                  description: Optional description of the reason
                  example: "The token has been compromised due to fraudulent activity."
                  maxLength: 225
              required:
                - reason
                - siteId
                - instrument
                - auth
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                required:
                  - status
  /notifications:
    post:
      summary: "Notifications"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: "Token notification sites"
                  type: "object"
                  properties:
                    type:
                      type: "string"
                      description: "Type of event."
                      enum: "TOKEN_UPDATED"
                      example: "TOKEN_UPDATED"
                    siteId:
                      type: "string"
                      description: "Site ID."
                      format: "uuid V4"
                      example: "2972c13d-6315-4da3-80d7-64c24eb232ad"
                    signature:
                      type: "string"
                      description: "Cryptographic value generated from the combination of data and a secret key."
                      format: "Base64(SHA-256(secretKey + data + date))"
                      example: "example/P1JX8/skd4V0Lxruc69+FB/vwhLqqipJ2jo="
                    date:
                      type: "string"
                      description: "Notification date."
                      format: 'Y-m-d h:m:s'
                      example: "2023-01-19 15:57:23"
                    data:
                      type: "object"
                      description: "Data related to the event."
                      properties:
                        id:
                          type: "string"
                          description: "Unique identifier of the token."
                          format: "uuid V4"
                          example: "d8677265-03d2-4ffd-bf1e-9831073c1b11"
                        status:
                          type: "string"
                          description: "Status of the token."
                          enum:
                            - "ACTIVE"
                            - "INACTIVE"
                            - "EXPIRED"
                            - "DELETED"
                          example: "ACTIVE"
                        expiration:
                          type: "string"
                          description: "Token expiration date."
                          format: "mm/YY"
                          example: "01/26"
                      required:
                        - "id"
                        - "status"
                        - "expiration"
                  required:
                    - "type"
                    - "siteId"
                    - "signature"
                    - "date"
                    - "data"
                - title: "Token notification consumers"
                  type: "object"
                  properties:
                    type:
                      type: "string"
                      description: "Type of event."
                      enum: "TOKEN_UPDATED"
                      example: "TOKEN_UPDATED"
                    consumerId:
                      type: "string"
                      description: "Consumer ID."
                      format: "uuid V4"
                      example: "9f9cb003-a67b-4119-bb62-75c85599d5d1"
                    siteId:
                      type: "string"
                      description: "Site ID."
                      format: "uuid V4"
                      example: "2972c13d-6315-4da3-80d7-64c24eb232ad"
                    signature:
                      type: "string"
                      description: "Cryptographic value generated from the combination of data and a secret key."
                      format: "Base64(SHA-256(secretKey + data + date))"
                      example: "example/P1JX8/skd4V0Lxruc69+FB/vwhLqqipJ2jo="
                    date:
                      type: "string"
                      description: "Notification date."
                      format: 'Y-m-d h:m:s'
                      example: "2023-01-19 15:57:23"
                    data:
                      type: "object"
                      description: "Data related to the event."
                      properties:
                        id:
                          type: "string"
                          description: "Unique identifier of the token."
                          format: "uuid V4"
                          example: "d8677265-03d2-4ffd-bf1e-9831073c1b11"
                        status:
                          type: "string"
                          description: "Status of the token."
                          enum:
                            - "ACTIVE"
                            - "INACTIVE"
                            - "EXPIRED"
                            - "DELETED"
                          example: "ACTIVE"
                        expiration:
                          type: "string"
                          description: "Token expiration date."
                          format: "mm/YY"
                          example: "01/26"
                      required:
                        - "id"
                        - "status"
                        - "expiration"
                  required:
                    - "type"
                    - "consumerId"
                    - "siteId"
                    - "signature"
                    - "date"
                    - "data"
                - title: "OnBoarding notification consumers"
                  type: "object"
                  properties:
                    type:
                      type: "string"
                      description: "Type of event."
                      enum: "TOKEN_UPDATED"
                      example: "TOKEN_UPDATED"
                    merchantId:
                      type: "string"
                      description: "Merchant ID."
                      format: "uuid V4"
                      example: "9f9cb003-a67b-4119-bb62-75c85599d5d1"
                    signature:
                      type: "string"
                      description: "Cryptographic value generated from the combination of data and a secret key."
                      format: "Base64(SHA-256(secretKey + data + date))"
                      example: "example/P1JX8/skd4V0Lxruc69+FB/vwhLqqipJ2jo="
                    date:
                      type: "string"
                      description: "Notification date."
                      format: 'Y-m-d h:m:s'
                      example: "2023-01-19 15:57:23"
                    data:
                      type: "object"
                      description: "Data related to the event."
                      properties:
                        id:
                          type: "string"
                          description: "Unique identifier of the token."
                          format: "uuid V4"
                          example: "d8677265-03d2-4ffd-bf1e-9831073c1b11"
                        document:
                          $ref: "#/components/schemas/Document"
                        franchise:
                          type: "string"
                          description: "Franchise name."
                          enum:
                            - "visa"
                            - "master"
                          example: "visa"
                        status:
                          type: "object"
                          description: "Information status of the OnBoarding."
                          properties:
                            status:
                              type: "string"
                              description: "Status of the OnBoarding."
                              enum:
                                - "ACTIVE"
                              example: "ACTIVE"
                            reason:
                              type: "string"
                              description: "Reason for the operation status."
                              maxLength: "2"
                              example: "00"
                      required:
                        - "id"
                        - "document"
                        - "franchise"
                        - "status"
                  required:
                    - "type"
                    - "merchantId"
                    - "signature"
                    - "date"
                    - "data"
      responses:
  /api/admin/credentials/create:
    post:
      summary: Create a credential (PROCESSOR)
      description: >
        This endpoint allows the creation of a new access credential for the platform.  
        *Requires authentication using WS‐Security UsernameToken (**auth** block).*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                data:
                  type: object
                  description: Data for the credential to be created.
                  required:
                    - name
                    - role
                  properties:
                    name:
                      type: string
                      maxLength: 100
                      description: Identifier name for the credential.
                      example: Wallet placetopay
                    description:
                      type: string
                      maxLength: 220
                      description: Functional description.
                      example: Wallet placetopay
                    role:
                      type: string
                      description: Credential role.
                      enum:
                        - PROCESSOR
                      example: PROCESSOR
                    restrictions:
                      type: object
                      description: >
                        Resources the credential will have access to.  
                        *Must include at least one of the arrays **consumers** or **sites**.*
                      properties:
                        consumers:
                          type: "array"
                          description: "Container with consumer identifiers associated with merchants."
                          items:
                            type: string
                          example: '["your-consumer-id"]'
                        sites:
                          type: "array"
                          description: "Container with site identifiers associated with merchants."
                          items:
                            type: string
                          example: '["your-site-id"]'
              required:
                - auth
            examples:
              credential_processor:
                summary: Successful request – PROCESSOR
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ptvCmJF7KgwGmYmL
                    nonce: cHJ1ZWJhZGU=
                    seed: 2025-07-10T10:10:00-05:00
                  data:
                    name: Sura
                    description: Credential for SURA
                    role: PROCESSOR
                    restrictions:
                      sites: ["34227455-2fe8-4596-8999-9c249dec618a"]
                      consumers: ["f5ff8bb0-1db9-433b-8d66-e20ebcbd12ae"]
      responses:
        '200':
          description: Credential created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    description: Details of the created credential.
                    properties:
                      login:
                        type: string
                        description: Login assigned to the new credential.
                        example: aabbccdd1234567890aabbccdd123456
                      secretKey:
                        type: string
                        description: Generated secret key.
                        example: ptvCmJF7KgwGmYmL
                      restrictions:
                        type: object
                        description: Resources associated with the credential.
                        properties:
                          consumers:
                            type: "array"
                            description: "Container with consumer identifiers associated with merchants."
                            items:
                              type: string
                            example: '["your-consumer-id"]'
                          sites:
                            type: "array"
                            description: "Container with site identifiers associated with merchants."
                            items:
                              type: string
                            example: '["your-site-id"]'
                required:
                  - status
                  - data
  /api/admin/credentials/show:
    post:
      summary: Query credential by login
      description: >
        This endpoint allows querying the information of a previously created credential
        using its login.  
        Requires authentication via WS‐Security UsernameToken (**auth**).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                login:
                  type: string
                  description: Login of the credential to query
                  example: aabbccdd1234567890aabbccdd123456
              required:
                - auth
                - login
            examples:
              query_credential:
                summary: Sample request
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: enQ4dXh3YWhkMWM=
                    seed: 2023-06-21T09:56:06-05:00
                  login: aabbccdd1234567890aabbccdd123456
      responses:
        '200':
          description: Successful query.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    description: Details of the queried credential.
                    properties:
                      login:
                        type: string
                        example: aabbccdd1234567890aabbccdd123456
                      name:
                        type: string
                        example: PTP Credential
                      description:
                        type: string
                        example: Credential for Placetopay wallet
                      role:
                        type: string
                        enum:
                          - PROCESSOR
                        example: PROCESSOR
                      restrictions:
                        type: object
                        description: Resources the credential will have access to.
                        properties:
                          consumers:
                            type: "array"
                            description: "Container with consumer identifiers associated with merchants."
                            items:
                              type: string
                            example: '["your-consumer-id"]'
                          sites:
                            type: "array"
                            description: "Container with site identifiers associated with merchants."
                            items:
                              type: string
                            example: '["your-site-id"]'
                      isEnabled:
                        type: boolean
                        example: true
                        description: Indicates whether the resource or functionality is enabled (`true`) or disabled (`false`).
                      createdAt:
                        type: string
                        description: Date created
                        example: 2025-07-09 15:45:05
                      updatedAt:
                        type: string
                        description: Date updated
                        example: 2025-07-09 15:45:05
                required:
                  - status
                  - data
  /api/admin/credentials/edit:
    post:
      summary: Edit an existing credential
      description: >
        Allows modifying configurable attributes of a credential.  
        It's not possible to directly change the login or the tranKey.  
        If the `restrictions` field is provided, it will completely replace the current restrictions.
      operationId: admin.credentials.edit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - login
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                login:
                  type: string
                  description: Login of the credential to edit.
                  example: aabbccdd1234567890aabbccdd123456
                data:
                  type: object
                  description: Optional fields to update the credential.
                  properties:
                    name:
                      type: string
                      maxLength: 100
                      example: PTP Credential
                    description:
                      type: string
                      maxLength: 220
                      example: Credential for the Placetopay wallet
                    role:
                      type: string
                      enum:
                        - PROCESSOR
                      example: PROCESSOR
                    isEnabled:
                      type: boolean
                      example: true
                      description: Indicates whether the resource or functionality is enabled (`true`) or disabled (`false`).
                    restrictions:
                      type: object
                      description: >
                        Resources the credential will have access to.  
                        *If included, the current restrictions will be fully replaced.*
                      properties:
                        consumers:
                          type: "array"
                          description: "Container with consumer identifiers associated with merchants."
                          items:
                            type: string
                          example: '["your-consumer-id"]'
                        sites:
                          type: "array"
                          description: "Container with site identifiers associated with merchants."
                          items:
                            type: string
                          example: '["your-site-id"]'
            examples:
              edit_credential:
                summary: Example of edit request
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: enQ4dXh3YWhkMWM=
                    seed: 2023-06-21T09:56:06-05:00
                  login: aabbccdd1234567890aabbccdd123456
                  data:
                    name: PTP Credential
                    description: Credential for the Placetopay wallet
                    role: PROCESSOR
                    isEnabled: true
                    restrictions:
                      consumers: ["34227455-2fe8-4596-8999-9c249dec618a"]
                      sites: ["34227455-2fe8-4596-8999-9c249dec618a"]
      responses:
        '200':
          description: Credential successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid V4
                        description: ID of the updated credential.
                        example: 0197efdc-aac3-7394-8f35-f0ce1e244c2c
                required:
                  - status
                  - data
  /api/admin/credentials/delete:
    post:
      summary: Delete a credential
      description: >
        Permanently deletes an existing credential from the system, based on its login.  
        This operation requires administrative authentication and special permissions.
      operationId: admin.credentials.delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - login
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                login:
                  type: string
                  description: Login of the credential to be deleted.
                  example: aabbccdd1234567890aabbccdd123456
            examples:
              eliminar_credencial:
                summary: Request example
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: enQ4dXh3YWhkMWM=
                    seed: 2023-06-21T09:56:06-05:00
                  login: aabbccdd1234567890aabbccdd123456
      responses:
        '200':
          description: Successful deletion.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                required:
                  - status
  /api/admin/credentials/index:
    post:
      tags:
        - Admin Credentials
      summary: List Credentials
      operationId: indexAdminCredentials
      description: >
        Allows listing the credentials registered in the system with support for filters and pagination.
        It can be filtered by name, role, sites, consumers, or creation date range.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                filters:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Exact name of the credential.
                    role:
                      type: string
                      description: Role of the credential.
                      example: PROCESSOR
                    sites:
                      type: "array"
                      description: "Container with site identifiers associated with merchants."
                      items:
                        type: string
                      example: '["your-site-id"]'
                    consumers:
                      type: "array"
                      description: "Container with consumer identifiers associated with merchants."
                      items:
                        type: string
                      example: '["your-consumer-id"]'
                    createdAt:
                      type: object
                      properties:
                        from:
                          type: string
                          format: date-time
                          description: Start creation date (ISO 8601).
                          example: "2025-01-01T00:00:00-05:00"
                        to:
                          type: string
                          format: date-time
                          description: End creation date (ISO 8601).
                          example: "2025-01-31T23:59:59-05:00"
                pagination:
                  type: object
                  properties:
                    currentPage:
                      type: integer
                      description: The current page being viewed.
                      example: 1
                      default: 1
                    perPage:
                      type: integer
                      description: The number of items returned per page.
                      example: 10
                      maximum: 100
                      default: 15
      responses:
        '200':
          description: Successful response with paginated credential data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        login:
                          type: string
                          example: "aabbccdd1234567890aabbccdd123456"
                        name:
                          type: string
                          example: "Credencial PTP"
                        role:
                          type: string
                          example: "PROCESSOR"
                        isEnabled:
                          type: boolean
                          example: true
                          description: Indicates whether the resource or functionality is enabled (`true`) or disabled (`false`).
                        createdAt:
                          type: string
                          description: Date created
                          format: date-time
                          example: "2025-07-09 15:45:05"
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date updated
                          example: "2025-07-09 15:46:27"
                  pagination:
                    type: object
                    description: Pagination information for the result set.
                    properties:
                      currentPage:
                        type: integer
                        description: The current page being viewed.
                        example: 1
                        default: 1
                      lastPage:
                        type: integer
                        description: The last page available, based on the total number of records and items per page.
                        example: 5
                      perPage:
                        type: integer
                        description: The number of items returned per page.
                        example: 10
                        maximum: 100
                        default: 15
                      total:
                        type: integer
                        example: 1

  /api/admin/sites/create:
    post:
      summary: Create a new site
      description: >
        This endpoint allows you to register a new site within the system's administration environment.  
        *Requires authentication using WS‐Security UsernameToken (**auth** block).*  
        The site will be associated with a valid merchant and may include additional configuration such as webhook URL, test mode, and enablement date.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                data:
                  type: object
                  description: Data of the site to be registered.
                  required:
                    - name
                    - merchantId
                  properties:
                    name:
                      type: string
                      maxLength: 225
                      description: Name of the site to be registered.
                      example: Site Test
                    webhookURL:
                      type: string
                      maxLength: 225
                      description: URL where site notifications will be sent.
                      example: https://webhook.site/asdads
                    webhookSecret:
                      type: string
                      maxLength: 25
                      description: Token used to verify incoming notifications.
                      example: E0wWIBNtNr3GSF6G
                    merchantId:
                      type: string
                      format: uuid V4
                      description: Identifier of the merchant associated with the site.
                      example: f1d0888b-f5a9-445a-8c54-dba63763fbc5
                    onTest:
                      type: boolean
                      description: Indicates whether the site is in test (sandbox) mode.
                      example: true
                    enabledAt:
                      type: string
                      format: date-time
                      description: Date from which the site will be enabled.
                      example: 2025-06-16T22:29:01+00:00
              required:
                - auth
                - data
            examples:
              full_request:
                summary: Successful request – all fields
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: MnFrcmZlYjQ0bXk=
                    seed: 2025-07-03T20:28:43-05:00
                  data:
                    name: Site Test
                    webhookURL: https://webhook.site/asdads
                    webhookSecret: E0wWIBNtNr3GSF6G
                    merchantId: f1d0888b-f5a9-445a-8c54-dba63763fbc5
                    onTest: true
                    enabledAt: 2025-06-16T22:29:01+00:00
              minimal_request:
                summary: Successful request – only required fields
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: MnFrcmZlYjQ0bXk=
                    seed: 2025-07-03T20:28:43-05:00
                  data:
                    name: Site Test
                    merchantId: f1d0888b-f5a9-445a-8c54-dba63763fbc5
      responses:
        '200':
          description: Site created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    description: Details of the created site.
                    properties:
                      id:
                        type: string
                        format: uuid V4
                        description: ID of the created site.
                        example: 9f4e4926-4783-44b9-a169-f3ad38e61bea
                required:
                  - status
                  - data

  /api/admin/sites/show:
    post:
      summary: Site query
      description: >
        This operation allows querying the detailed information of a previously registered site in the administrative system.  
        It is available exclusively to authenticated users who have access and visibility permissions over the resource.

        The response includes basic information about the site, its enablement status, test mode (`onTest`), and the merchant and consumer it is linked to.  
        It also includes webhook configuration, if applicable.

        This operation validates:
          - Authentication using the `auth` block
          - Format of the `id` field
          - Site existence
          - Access permissions (ACL)
      operationId: api.admin.sites.show
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - id
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: string
                  format: uuid V4
                  description: Unique identifier of the site to query.
                  example: 9f4e4926-4783-44b9-a169-f3ad38e61bea
      responses:
        '200':
          description: Site successfully queried.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid V4
                        example: 9f4e4926-4783-44b9-a169-f3ad38e61bea
                      name:
                        type: string
                        maxLength: 225
                        example: Site Test
                      merchant:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid V4
                            example: f1d0888b-f5a9-445a-8c54-dba63763fbc5
                          name:
                            type: string
                            maxLength: 225
                            example: Merchant Test
                      consumer:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid V4
                            example: e1a8c0b2-c7f1-49e3-91e0-7059b50e3f43
                          name:
                            type: string
                            maxLength: 225
                            example: Consumer Test
                      webhookURL:
                        type: string
                        format: uri
                        maxLength: 225
                        example: https://webhook.site/test
                      availableFranchises:
                        $ref: "#/components/schemas/AvailableFranchises"
                      webhookSecret:
                        type: string
                        maxLength: 25
                        description: Secret key to validate webhook messages
                        example: secret-token
                      onTest:
                        type: boolean
                        example: true
                        description: Indicates whether the site is in test (sandbox) mode.
                      enabledAt:
                        type: string
                        format: date-time
                        example: 2025-06-16T22:29:01
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-07-01T10:00:00
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-07-02T15:30:00
        '400':
          description: Request error, invalid data or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
  /api/admin/sites/edit:
    post:
      tags:
        - Admin / Sites
      summary: Site update
      operationId: api.admin.sites.update
      description: >
        Allows partial modification of the attributes of an existing site. Only the fields provided in the `data` object will be updated.  
        This operation requires authentication with valid credentials and management permissions for sites.  
        Fields such as `consumerId` and `merchantId` are not editable.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - auth
                - id
                - data
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: string
                  format: uuid V4
                  description: UUID identifier of the site to be updated
                data:
                  type: object
                  properties:
                    name:
                      type: string
                      maxLength: 225
                      description: Site name (required if included)
                    webhookURL:
                      type: string
                      format: uri
                      maxLength: 225
                      description: URL for automatic notification webhook
                    webhookSecret:
                      type: string
                      maxLength: 25
                      description: Secret key to validate webhook messages
                    onTest:
                      type: boolean
                      description: Indicates whether the site is in test (sandbox) mode.
                      example: true
                    enabledAt:
                      type: string
                      format: date-time
                      description: Activation date and time for the site (ISO 8601)
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid V4
        '400':
          description: Request error (invalid data or incorrect ID)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
  /api/admin/sites/delete:
    post:
      summary: Site deletion
      operationId: deleteSite
      description: >
        This operation allows deleting a registered site in the system's administrative environment. It is restricted to authenticated users with the proper site management permissions. The deletion is conditional based on the site state and its relation to other resources.

        If the site has associated tokens, the operation will be rejected and the client will be notified that the site cannot be deleted. Only sites without tokens can be successfully deleted. This operation is irreversible.
      tags:
        - Sites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: string
                  format: uuid V4
                  description: Unique identifier of the site to be deleted.
                  example: 9f4e4926-4783-44b9-a169-f3ad38e61bea
              required:
                - auth
                - id
            examples:
              successful:
                summary: Successful request
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: MnFrcmZlYjQ0bXk=
                    seed: "2025-07-03T20:28:43-05:00"
                  id: 9f4e4926-4783-44b9-a169-f3ad38e61bea
              failed_tokens:
                summary: Failed - site with associated tokens
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: MnFrcmZlYjQ0bXk=
                    seed: "2025-07-03T20:28:43-05:00"
                  id: 9f4e4926-4783-44b9-a169-f3ad38e61bea
              failed_invalid:
                summary: Failed - nonexistent site
                value:
                  auth:
                    login: aabbccdd1234567890aabbccdd123456
                    tranKey: ABC123example456trankey+789abc012def3456ABC=
                    nonce: MnFrcmZlYjQ0bXk=
                    seed: "2025-07-03T20:28:43-05:00"
                  id: invalid
      responses:
        '200':
          description: Successful removal
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
              examples:
                success:
                  summary: Success
                  value:
                    status:
                      status: OK
                      reason: '00'
                      message: The request has been successfully processed
                      date: '2025-07-04T14:50:00+00:00'
                error_tokens:
                  summary: Failure - site with tokens
                  value:
                    status:
                      status: FAILED
                      reason: BR
                      message: The selected id is invalid.
                      date: '2025-07-04T14:53:40+00:00'
        '400':
          description: Request error, invalid data or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
  /api/admin/sites/index:
    post:
      tags:
        - Sites
      summary: Site listing
      description: >
        This operation retrieves a list of sites registered in the administrative system.  
        It returns paginated results and supports multiple filters to narrow the search.  
        The response includes basic information about each site and may be subject to Access Control List (ACL) rules.
      operationId: api.admin.sites.index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                filters:
                  type: object
                  properties:
                    consumers:
                      type: "array"
                      description: "Container with consumer identifiers associated with merchants."
                      items:
                        type: string
                      example: '["your-consumer-id"]'
                    merchants:
                      type: "array"
                      description: "Container with merchants identifiers."
                      items:
                        type: string
                      example: '["your-merchant-id"]'
                    name:
                      type: string
                      maxLength: 225
                      description: Site name
                    onTest:
                      type: boolean
                      example: true
                      description: Indicates whether the site is in test (sandbox) mode.
                    createdAt:
                      type: object
                      properties:
                        from:
                          type: string
                          format: date-time
                          description: Start creation date (ISO 8601).
                          example: "2025-01-01T00:00:00-05:00"
                        to:
                          type: string
                          format: date-time
                          description: End creation date (ISO 8601).
                          example: "2025-01-31T23:59:59-05:00"
                pagination:
                  type: object
                  description: Pagination information for the result set.
                  properties:
                    currentPage:
                      type: integer
                      description: The current page being viewed.
                      example: 1
                      default: 1
                    perPage:
                      type: integer
                      description: The number of items returned per page.
                      example: 10
                      maximum: 100
                      default: 15
      responses:
        '200':
          description: Successful response with paginated site data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid V4
                          description: Site UUID
                        merchant:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid V4
                              description: Merchant UUID
                            name:
                              type: string
                              maxLength: 225
                              description: Merchant Name
                        consumer:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid V4
                              description: Consumer UUID
                            name:
                              type: string
                              maxLength: 225
                              description: Consumer name
                        name:
                          type: string
                          maxLength: 225
                          description: Site Name
                        onTest:
                          type: boolean
                          example: true
                          description: Indicates whether the site is in test (sandbox) mode.
                        enabledAt:
                          type: string
                          format: date-time
                          example: 2025-07-01 10:00:00
                        createdAt:
                          type: string
                          format: date-time
                          example: 2025-07-01 10:00:00
                  pagination:
                    type: object
                    description: Pagination information for the result set.
                    properties:
                      currentPage:
                        type: integer
                        description: The current page being viewed.
                        example: 1
                        default: 1
                      lastPage:
                        type: integer
                        description: The last page available, based on the total number of records and items per page.
                        example: 5
                      perPage:
                        type: integer
                        description: The number of items returned per page.
                        example: 10
                        maximum: 100
                        default: 15
                      total:
                        type: integer
                        description: The total number of records available for the query.
                        example: 47
        '400':
          description: Invalid request due to parameter errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
  /api/admin/merchants/create:
    post:
      summary: "Creation of merchants"
      operationId: "token-requestor-admin-merchants-create"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                data:
                  type: "object"
                  description: "Main container for merchant data."
                  properties:
                    name:
                      type: "string"
                      description: "Merchant name."
                      maxLength: "225"
                      example: "ACME Corp"
                    brand:
                      type: "string"
                      description: "Brand name associated with the merchant."
                      maxLength: "225"
                      example: "ACME Corp BRAND"
                    mcc:
                      type: "string"
                      description: "MCC code (economic activity)."
                      maxLength: "10"
                      example: "0742"
                    websiteURL:
                      type: "string"
                      description: "Merchant website URL."
                      maxLength: "225"
                      example: "https://acme.com"
                    consumerId:
                      type: "string"
                      description: "Consumer identifier."
                      maxLength: "36"
                      example: "your-consumer-id"
                    address:
                      $ref: "#/components/schemas/Address"
                    document:
                      $ref: "#/components/schemas/Document"
                    legalRepresentative:
                      $ref: "#/components/schemas/LegalRepresentative"
                  required:
                    - "name"
                    - "brand"
                    - "consumerId"
                    - "address"
                    - "document"
                    - "legalRepresentative"
              required:
                - "auth"
                - "data"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: "object"
                    description: "Result data"
                    properties:
                      id:
                        type: "string"
                        format: "uuid V4"
                        description: "Merchant identifier."
                        example: "62a89e6b-6ea9-463a-b720-4d34f76436d9"
  /api/admin/merchants/update:
    post:
      summary: "Updating of merchants"
      operationId: "token-requestor-admin-merchants-update"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: "uuid"
                  description: "Merchant identifier."
                  maxLength: "36"
                  example: "9f5db0db-102a-40f8-a1aa-d7735d9fb50a"
                data:
                  type: "object"
                  description: "Main container for merchant data."
                  properties:
                    name:
                      type: "string"
                      description: "Merchant name."
                      maxLength: "225"
                      example: "ACME Corp"
                    brand:
                      type: "string"
                      description: "Brand name associated with the merchant."
                      maxLength: "225"
                      example: "ACME Corp BRAND"
                    mcc:
                      type: "string"
                      description: "MCC code (economic activity)."
                      maxLength: "10"
                      example: "0743"
                    websiteURL:
                      type: "string"
                      description: "Merchant website URL."
                      maxLength: "225"
                      example: "https://acme.com"
                    address:
                      $ref: "#/components/schemas/Address"
                    legalRepresentative:
                      $ref: "#/components/schemas/LegalRepresentative"
              required:
                - "auth"
                - "id"
                - "data"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: "object"
                    description: "Result data"
                    properties:
                      id:
                        type: "string"
                        format: "uuid V4"
                        description: "Merchant identifier."
                        example: "62a89e6b-6ea9-463a-b720-4d34f76436d9"
  /api/admin/merchants/delete:
    post:
      summary: "Elimination of merchant"
      operationId: "token-requestor-admin-merchants-delete"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: "uuid"
                  description: "Consumer identifier."
                  maxLength: "36"
                  example: "9f5db0db-102a-40f8-a1aa-d7735d9fb50a"
              required:
                - "auth"
                - "id"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
  /api/admin/merchants/show:
    post:
      summary: "Query of merchant"
      operationId: "token-requestor-admin-merchants-show"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                id:
                  type: "uuid"
                  description: "Merchant identifier."
                  maxLength: "36"
                  example: "9f5db0db-102a-40f8-a1aa-d7735d9fb50a"
              required:
                - "auth"
                - "id"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  data:
                    type: "object"
                    description: "Main container for merchant data."
                    properties:
                      id:
                        type: "uuid"
                        description: "Merchant identifier."
                        maxLength: "36"
                        example: "9f5db0db-102a-40f8-a1aa-d7735d9fb50a"
                      name:
                        type: "string"
                        description: "Merchant name."
                        maxLength: "225"
                        example: "ACME Corp"
                      brand:
                        type: "string"
                        description: "Brand name associated with the merchant."
                        maxLength: "225"
                        example: "ACME Corp BRAND"
                      mcc:
                        type: "string"
                        description: "MCC code (economic activity)."
                        maxLength: "10"
                        example: "0742"
                      websiteURL:
                        type: "string"
                        description: "Merchant website URL."
                        maxLength: "225"
                        example: "https://acme.com"
                      consumer:
                        type: "object"
                        description: "Main container for consumer data."
                        properties:
                          id:
                            type: "string"
                            description: "Merchant identifier."
                            maxLength: "36"
                            example: "your-consumer-id"
                          name:
                            type: "uuid"
                            description: "Consumer name."
                            maxLength: "225"
                            example: "Consumer Name"
                      address:
                        $ref: "#/components/schemas/Address"
                      document:
                        $ref: "#/components/schemas/Document"
                      legalRepresentative:
                        $ref: "#/components/schemas/LegalRepresentative"
                      availableFranchises:
                        $ref: "#/components/schemas/AvailableFranchises"
                      createdAt:
                        type: "string"
                        description: "Merchant creation date."
                        format: "date-time"
                        example: "2022-12-30 13:45:02"
                      updatedAt:
                        type: "string"
                        description: "Merchant creation update."
                        format: "date-time"
                        example: "2022-12-30 13:45:02"
                    required:
                      - "name"
                      - "brand"
                      - "consumer"
                      - "address"
                      - "document"
                      - "legalRepresentative"
  /api/admin/merchants/index:
    post:
      summary: "List of merchants"
      operationId: "token-requestor-admin-merchants-index"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                auth:
                  $ref: "#/components/schemas/Authentication"
                filters:
                  type: "object"
                  description: "Container for filtering criteria."
                  properties:
                    consumers:
                      type: "array"
                      description: "Container with consumer identifiers associated with merchants."
                      items:
                        type: string
                      example: '["your-consumer-id"]'
                    name:
                      type: "string"
                      description: "Merchant name."
                      maxLength: "225"
                      example: "ACME Corp"
                    brand:
                      type: "string"
                      description: "Brand name associated with the merchant."
                      maxLength: "225"
                      example: "ACME Corp BRAND"
                    document:
                      $ref: "#/components/schemas/Document"
                    createdAt:
                      type: "object"
                      description: "Container for filtering by creation date."
                      properties:
                        from:
                          type: "string"
                          description: "Start date of creation range."
                          format: "date-time"
                          example: "2022-12-30 13:45:02"
                        to:
                          type: "string"
                          description: "End date of creation range."
                          format: "date-time"
                          example: "2022-12-30 13:45:02"
                    updatedAt:
                      type: "object"
                      description: "Container for filtering by update date."
                      properties:
                        from:
                          type: "string"
                          description: "Start date of update range."
                          format: "date-time"
                          example: "2022-12-30 13:45:02"
                        to:
                          type: "string"
                          description: "End date of update range."
                          format: "date-time"
                          example: "2022-12-30 13:45:02"
                    pagination:
                      type: "object"
                      description: "Pagination parameters."
                      properties:
                        perPage:
                          type: "integer"
                          description: "The number of items returned per page."
                          maxLength: "100"
                          example: "10"
                        currentPage:
                          type: "integer"
                          description: "The current page being viewed."
                          minLength: "1"
                          example: "1"
              required:
                - "auth"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    $ref: "#/components/schemas/Status"
                  pagination:
                    type: "object"
                    description: "Pagination information for the result set."
                    properties:
                      total:
                        type: "integer"
                        description: "The total number of records available for the query."
                        example: "10"
                      perPage:
                        type: "integer"
                        description: "The number of items returned per page."
                        example: "10"
                      currentPage:
                        type: "integer"
                        description: "The current page being viewed."
                        example: "1"
                      lastPage:
                        type: "integer"
                        description: "The last page available, based on the total number of records and items per page."
                        example: "1"
                  data:
                    type: "object"
                    description: "Main container for merchant data."
                    properties:
                      id:
                        type: "uuid"
                        description: "Merchant identifier."
                        maxLength: "36"
                        example: "9f5db0db-102a-40f8-a1aa-d7735d9fb50a"
                      name:
                        type: "string"
                        description: "Merchant name."
                        maxLength: "225"
                        example: "ACME Corp"
                      brand:
                        type: "string"
                        description: "Brand name associated with the merchant."
                        maxLength: "225"
                        example: "ACME Corp BRAND"
                      consumer:
                        type: "object"
                        description: "Main container for consumer data."
                        properties:
                          id:
                            type: "string"
                            description: "Consumer identifier."
                            maxLength: "36"
                            example: "your-consumer-id"
                          name:
                            type: "uuid"
                            description: "Consumer name."
                            maxLength: "225"
                            example: "Consumer Name"
                      document:
                        $ref: "#/components/schemas/Document"
                      createdAt:
                        type: "string"
                        description: "Merchant creation date"
                        format: "date-time"
                        example: "2022-12-30 13:45:02"
                      updatedAt:
                        type: "string"
                        description: "Merchant update date"
                        format: "date-time"
                        example: "2022-12-30 13:45:02"
                    required:
                      - "name"
                      - "brand"
                      - "consumer"
                      - "document"

components:
  schemas:
    Status:
      title: "Status"
      type: "object"
      description: "Structure containing information about a request, indicating its current status."
      properties:
        status:
          type: "string"
          description: "Operation status."
          enum:
            - "OK"
            - "REJECTED"
            - "FAILED"
            - "PENDING"
          example: "OK"
        reason:
          type: "string"
          description: "Reason for the operation status."
          maxLength: "2"
          example: "00"
        message:
          type: "string"
          description: "Status description."
          example: "The request has been successfully processed"
        date:
          type: "string"
          description: "Date the operation was executed."
          format: "date-time"
          example: '2025-03-17T22:45:27+00:00'
      required:
        - "status"
        - "reason"
        - "message"
        - "date"
    Authentication:
      title: "Authentication"
      type: "object"
      description: "Authentication object. See more at **[Autentication](/token-requestor/integration/authentication)**. 
        Structure containing site authentication information generated according to WSSE UsernameToken Profile 1.1."
      properties:
        login:
          type: "string"
          description: "Login for authentication."
          minLength: "1"
          example: "aabbccdd1234567890aabbccdd123456"
        tranKey:
          type: "string"
          description: "Transaction key."
          minLength: "1"
          example: "ABC123example456trankey+789abc012def3456ABC="
        nonce:
          type: "string"
          description: "Random value for each request, Base64 encoded."
          minLength: "1"
          example: "enQ4dXh3YWhkMWM="
        seed:
          type: "string"
          description: "Current date, generated in ISO 8601 format."
          minLength: "1"
          example: "2023-06-21T09:56:06-05:00"
      required:
        - "login"
        - "tranKey"
        - "nonce"
        - "seed"
    Address:
      title: "Address"
      type: "object"
      description: "Structure containing physical address information."
      properties:
        street:
          type: "string"
          description: "Street address."
          maxLength: "100"
          example: "Direccion del customer"
        city:
          type: "string"
          description: "City."
          maxLength: "100"
          example: "Medellin"
        state:
          type: "string"
          description: "State or province."
          maxLength: "100"
          example: "belen"
        country:
          type: "string"
          description: "Country. ISO 3166-1 alpha-2 code."
          maxLength: "2"
          example: "CO"
        phone:
          type: "string"
          description: "Contact phone number.."
          maxLength: "20"
          example: "3172234333"
        zipCode:
          type: "string"
          description: "Postal code."
          maxLength: "20"
          example: "050031"
      required:
        - "zipCode"
        - "city"
        - "country"
    Document:
      title: "Document"
      type: "object"
      description: "Structure containing document information."
      properties:
        type:
          type: "string"
          description: "Identification document type."
          maxLength: "4"
          enum:
            - "CC"
            - "CE"
            - "TI"
            - "NIT"
            - "RUT"
            - "PPN"
            - "TAX"
            - "LIC"
            - "CIP"
            - "PARUC"
            - "CPF"
            - "CI"
            - "RUC"
            - "DNI"
            - "PERUC"
            - "CRCPF"
            - "CPJ"
            - "DIMEX"
            - "DIDI"
            - "CLRUT"
            - "HNDNI"
            - "HNDR"
            - "RTN"
            - "BZSSN"
            - "BRN"
            - "EIN"
            - "UYCI"
            - "UYRUT"
          example: "NIT"
        number:
          type: "string"
          description: "Identification document number."
          example: "123456123"
      required:
        - "type"
        - "number"
    LegalRepresentative:
      title: "Legal Representative"
      type: "object"
      description: "Structure reflecting the legal representative’s information of the merchant."
      properties:
        documentType:
          type: "string"
          description: "Identification document type."
          maxLength: "4"
          enum:
            - "CC"
            - "CE"
            - "TI"
            - "NIT"
            - "RUT"
            - "PPN"
            - "TAX"
            - "LIC"
            - "CIP"
            - "PARUC"
            - "CPF"
            - "CI"
            - "RUC"
            - "DNI"
            - "PERUC"
            - "CRCPF"
            - "CPJ"
            - "DIMEX"
            - "DIDI"
            - "CLRUT"
            - "HNDNI"
            - "HNDR"
            - "RTN"
            - "BZSSN"
            - "BRN"
            - "EIN"
            - "UYCI"
            - "UYRUT"
          example: "CC"
        documentNumber:
          type: "string"
          description: "Identification document number."
          maxLength: "20"
          example: "12345678"
        name:
          type: "string"
          description: "Legal representative's first name."
          maxLength: "100"
          example: "Legal representative name"
        surname:
          type: "string"
          description: "Legal representative's last name."
          maxLength: "100"
          example: "Legal representative surname"
        email:
          type: "string"
          description: "Legal representative's email."
          maxLength: "225"
          example: "Jane@Doe"
        phone:
          type: "string"
          description: "Legal representative's contact phone number."
          maxLength: "20"
          example: "34455"
      required:
        - "name"
        - "surname"
        - "email"
        - "phone"
    AvailableFranchises:
      title: "Available Franchises"
      type: "object"
      description: "Availability status of each franchise for token management."
      properties:
        visa:
          type: "string"
          description: "Availability status visa."
          enum:
            - "PENDING"
            - "ACTIVE"
          example: "ACTIVE"
        master:
          type: "string"
          description: "Availability status mastercard."
          enum:
            - "PENDING"
            - "ACTIVE"
          example: "ACTIVE"
